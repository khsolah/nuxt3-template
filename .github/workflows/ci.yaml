name: ci

on:
  push: 
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    outputs:
      pnpm-store-path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
    steps:
      - uses: actions/checkout@v3

      - name: use node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: install dependencies
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: install
        run: |
          pnpm i

  test-unit:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3

      - name: restore dependencies
        uses: ./.github/workflows/restore-dependencies
        with:
          pnpm-store-path: ${{ needs.install.outputs.pnpm-store-path }}

      - name: test unit
        run: pnpm coverage

      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests

  build:
    runs-on: ubuntu-latest
    needs: install
    outputs:
      pnpm-store-path: ${{ needs.install.outputs.pnpm-store-path }}
    steps:
      - uses: actions/checkout@v3

      - name: restore dependencies
        uses: ./.github/workflows/restore-dependencies
        with:
          pnpm-store-path: ${{ needs.install.outputs.pnpm-store-path }}

      - name: Get Date
        id: get-date
        shell: bash
        run: |
          echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT

      - name: setup build cache
        uses: actions/cache@v3
        with:
          path: .output
          key: ${{ runner.os }}-output
          restore-keys: |
            ${{ runner.os }}-output

      - name: build
        run: |
          pnpm build

  lhci:
    runs-on: ubuntu-latest
    needs: [install, build]
    steps:
      - uses: actions/checkout@v3

      - name: restore dependencies
        uses: ./.github/workflows/restore-dependencies
        with:
          pnpm-store-path: ${{ needs.install.outputs.pnpm-store-path }}

      - name: restore output
        uses: actions/cache/restore@v3
        with:
          path: .output
          key: ${{ runner.os }}-output

      - name: run lighthouse ci
        run: |
          pnpm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: [install, build]
    steps:
      - uses: actions/checkout@v3

      - name: restore dependencies
        uses: ./.github/workflows/restore-dependencies
        with:
          pnpm-store-path: ${{ needs.install.outputs.pnpm-store-path }}

      - name: restore output
        uses: actions/cache/restore@v3
        with:
          path: .output
          key: ${{ runner.os }}-output

      - uses: amondnet/vercel-action@v20
        id: vercel-action
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-comment: false
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: preview-url
        run: |
          echo ${{ steps.vercel-action.outputs.preview-url }}
